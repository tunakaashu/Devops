//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace project_for_devops.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class patient_data : DbContext
    {
        public patient_data()
            : base("name=patient_data")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<patient> patients { get; set; }
        public virtual DbSet<userlogin> userlogins { get; set; }
    
        public virtual int add_patient(string patient_Name, string gender, string marital_status, Nullable<int> age, Nullable<long> phone_no, string address, ObjectParameter patient_Id_out)
        {
            var patient_NameParameter = patient_Name != null ?
                new ObjectParameter("patient_Name", patient_Name) :
                new ObjectParameter("patient_Name", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var marital_statusParameter = marital_status != null ?
                new ObjectParameter("marital_status", marital_status) :
                new ObjectParameter("marital_status", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            var phone_noParameter = phone_no.HasValue ?
                new ObjectParameter("phone_no", phone_no) :
                new ObjectParameter("phone_no", typeof(long));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("add_patient", patient_NameParameter, genderParameter, marital_statusParameter, ageParameter, phone_noParameter, addressParameter, patient_Id_out);
        }
    
        public virtual int delete_patient(Nullable<int> patient_Id)
        {
            var patient_IdParameter = patient_Id.HasValue ?
                new ObjectParameter("patient_Id", patient_Id) :
                new ObjectParameter("patient_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_patient", patient_IdParameter);
        }
    
        public virtual ObjectResult<view_patient_Result> view_patient(Nullable<int> patient_Id)
        {
            var patient_IdParameter = patient_Id.HasValue ?
                new ObjectParameter("patient_Id", patient_Id) :
                new ObjectParameter("patient_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<view_patient_Result>("view_patient", patient_IdParameter);
        }
    
        public virtual int update_patient(Nullable<int> patient_Id, string patient_Name, string gender, string marital_status, Nullable<int> age, Nullable<long> phone_no, string address, Nullable<int> patient_Id_out)
        {
            var patient_IdParameter = patient_Id.HasValue ?
                new ObjectParameter("patient_Id", patient_Id) :
                new ObjectParameter("patient_Id", typeof(int));
    
            var patient_NameParameter = patient_Name != null ?
                new ObjectParameter("patient_Name", patient_Name) :
                new ObjectParameter("patient_Name", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var marital_statusParameter = marital_status != null ?
                new ObjectParameter("marital_status", marital_status) :
                new ObjectParameter("marital_status", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            var phone_noParameter = phone_no.HasValue ?
                new ObjectParameter("phone_no", phone_no) :
                new ObjectParameter("phone_no", typeof(long));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var patient_Id_outParameter = patient_Id_out.HasValue ?
                new ObjectParameter("patient_Id_out", patient_Id_out) :
                new ObjectParameter("patient_Id_out", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_patient", patient_IdParameter, patient_NameParameter, genderParameter, marital_statusParameter, ageParameter, phone_noParameter, addressParameter, patient_Id_outParameter);
        }
    
        public virtual ObjectResult<view_Id_Result> view_Id(Nullable<int> patient_Id)
        {
            var patient_IdParameter = patient_Id.HasValue ?
                new ObjectParameter("patient_Id", patient_Id) :
                new ObjectParameter("patient_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<view_Id_Result>("view_Id", patient_IdParameter);
        }
    }
}
